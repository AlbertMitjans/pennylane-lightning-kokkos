name: Testing (Windows)
on:
  push:
    branches:
      - master
  pull_request:

env:
  TF_VERSION: 2.6.0
  TORCH_VERSION: 1.10.0+cpu
  GCC_VERSION: 10
  COVERAGE_FLAGS: "--cov=pennylane_lightning_kokkos --cov-report=term-missing --cov-report=xml:./coverage.xml --no-flaky-report -p no:warnings --tb=native"
  OMP_NUM_THREADS: "2"

jobs:
  cpptests_threads:
    name: C++ tests (Windows) for SERIAL Kokkos backend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.10'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # for codecov

      - name: Configure MSVC for amd64 # Use cl.exe as a default compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Setup OpenCppCoverage and add to PATH
        run: |
          choco install OpenCppCoverage -y
          echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH

      - name: Build and run unit tests for code coverage
        run: |
            cmake . -BBuild -DPLKOKKOS_BUILD_TESTS=ON `
                    -DPLKOKKOS_ENABLE_SANITIZER=ON `
                    -DKokkos_ENABLE_DEPRECATION_WARNINGS=OFF `
                    -DCMAKE_POSITION_INDEPENDENT_CODE=ON `
                    -DCMAKE_BUILD_TYPE=RelWithDebInfo `
                    -T clangcl
            cmake --build .\Build
            mkdir -p ./Build/tests/results
            .\Build\tests\Debug\runner_kokkos.exe --order lex --reporter junit --out .\Build\tests\results\report.xml
            OpenCppCoverage --sources pennylane_lightning_kokkos\src --export_type cobertura:coverage.xml Build\tests\Debug\runner_kokkos.exe

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: windows-test-report
          path: .\Build\tests\results\report.xml

      - name: Upload Report to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          fail_ci_if_error: true

  pythontests_threads:
    name: Python tests (Windows) for Threads Kokkos Backend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout PennyLane-Lightning-Kokkos
        uses: actions/checkout@v2
        with:
          path: main
          fetch-depth: 2

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.10'

      - name: Get required Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-mock flaky
          pip uninstall pennylane -y
          pip install git+https://github.com/PennyLaneAI/pennylane.git
      - name: Install ML libraries for interfaces
        run: |
          pip install --upgrade torch==${{ env.TORCH_VERSION }} -f https://download.pytorch.org/whl/cpu/torch_stable.html
          pip install --upgrade "jax[cpu]"  # This also installs jaxlib
          pip install --upgrade tensorflow~=${{ env.TF_VERSION }}
      - name: Install lightning.kokkos device
        run: |
          cd main
          BACKEND="THREADS" python -m pip install -e .
      - name: Run PennyLane-Lightning unit tests
        run: |
          cd main/
          pytest tests/
          pl-device-test --device lightning.kokkos